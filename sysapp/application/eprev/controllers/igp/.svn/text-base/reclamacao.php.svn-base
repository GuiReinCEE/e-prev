<?php
class reclamacao extends Controller
{
    function __construct()
    {
        parent::Controller();
    }

    function index()
    {
		if(CheckLogin())
		{
	        $this->load->view('igp/reclamacao/index.php');
		}
    }

    function listar()
    {
        if(CheckLogin())
        {
	        $this->load->model( 'igp/Reclamacao_model' );

	        $data['collection'] = array();
	        $result = null;

	        // --------------------------
			// filtros ...

			$args=array();

			// --------------------------
			// listar ...

	        $this->Reclamacao_model->listar( $result, $args );

			$data['collection'] = $result->result_array();

	        if( $result )
	        {
	            $data['collection'] = $result->result_array();
	        }

	        // --------------------------

	        $this->load->view('igp/reclamacao/partial_result', $data);
        }
    }

	function detalhe($cd=0)
	{
		if(CheckLogin())
		{
			$this->load->model('igp/Reclamacao_model');
			$row=$this->Reclamacao_model->carregar( $cd );
			if($row)
			{
				if($cd==0)
				{
					$sql="SELECT to_char(dt_referencia + '1 month'::interval,'DD/MM/YYYY') AS mes_referencia, dt_referencia, nr_meta, nr_peso FROM igp.reclamacao WHERE dt_exclusao IS NULL ORDER BY dt_referencia DESC LIMIT 1";
					$query = $this->db->query($sql);
					$row_atual = $query->row_array();

					$row['dt_referencia'] = $row_atual['mes_referencia'];
					$row['nr_meta'] = $row_atual['nr_meta'];
					$row['nr_peso'] = $row_atual['nr_peso'];
				}
				
				$data['row'] = $row; 
			}
			$this->load->view('igp/reclamacao/detalhe', $data);
		}
	}

	function salvar()
	{
		if(CheckLogin())
		{
			$this->load->model('igp/Reclamacao_model');

			$args['cd_reclamacao']=intval($this->input->post('cd_reclamacao', true));
			$args["dt_referencia"] = $this->input->post("dt_referencia", true);

			$args["nr_atendimento"] = app_decimal_para_db( $this->input->post("nr_atendimento", true) );
			$args["nr_reclamacao"] = app_decimal_para_db( $this->input->post("nr_reclamacao", true) );
			$args["nr_meta"] = app_decimal_para_db( $this->input->post("nr_meta", true) );
			$args["nr_peso"] = app_decimal_para_db( $this->input->post("nr_peso", true) );

			$args["cd_usuario_inclusao"] = usuario_id();
			
			$msg=array();
			$retorno = $this->Reclamacao_model->salvar( $args, $msg );

			if($retorno)
			{
				// redirect( "igp/reclamacao/detalhe", "refresh" );
				echo 'true';
			}
			else
			{
				// $mensagens = implode('<br>', $msg);
				$mensagens = implode('\n',$msg);
				echo $mensagens;
				exibir_mensagem($msg[0]);
			}
		}
	}

	function excluir($id)
	{
		if(CheckLogin())
		{
			$this->load->model('igp/Reclamacao_model');

			$this->Reclamacao_model->excluir( $id );

			redirect( 'igp/reclamacao', 'refresh' );
		}
	}

	function criar_indicador()
	{
		if(CheckLogin())
		{
			$this->load->helper(array('indicador','igp'));
			$indicador = array();
	
			$this->load->model('igp/Reclamacao_model', 'dbmodel');
	
	        $collection = array();
	        $result = null;
	
	        // --------------------------
			// filtros ...
	
			$args=array();
	        $this->dbmodel->listar( $result, $args );
	
			$collection = $result->result_array();
	
			$atendimento_acumulado=0;
			$reclamacao_acumulado=0;
			$acumular_ate=12;
	
			// EXCLUIR IGP
			igp_limpar_historico(enum_indicador::RECLAMACAO);

			foreach( $collection as $item )
			{
				$percentual_reclamacao = (intval($item["nr_reclamacao"])/intval($item["nr_atendimento"]))*100;
				$percentual_reclamacao = $percentual_reclamacao.' %';
	
				// ATEND ACUMUL: ultimos 12 meses
				$a_atendimento_acumulado[]=$item["nr_atendimento"];
				$atendimento_acumulado=0;
	
				// RECL ACUMUL: ultimos 12 meses
				$a_reclamacao_acumulado[]=$item["nr_reclamacao"];
				$reclamacao_acumulado=0;
	
				$j=1;
				for( $i=sizeof($a_atendimento_acumulado);$i>0;$i-- )
				{
					if( $j<=$acumular_ate )
					{
						$atendimento_acumulado += $a_atendimento_acumulado[$i-1];
						$reclamacao_acumulado += $a_reclamacao_acumulado[$i-1];
			
						$j++;
					}
				}

				$percentual_reclamacao_acumulado = (intval($reclamacao_acumulado)/intval($atendimento_acumulado))*100;

				// = SE(E63>0;F63/E63;F63*100)			META / RESULT
				// E63 = $percentual_reclamacao
				// F63 = $item["nr_meta"]
				$meta_resultado = ($percentual_reclamacao>0)?( $item["nr_meta"]/$percentual_reclamacao ):( $item["nr_meta"]*100 );
				$meta_resultado = $meta_resultado*100;

				// = SE(K63>1;J63;J63*K63)				RF MES
				// K63 = $meta_resultado
				// J63 = $item["nr_peso"]
				$rf_mes = (floatval($meta_resultado)>100) ? $item["nr_peso"] : ($item["nr_peso"]*floatval($meta_resultado))/100;
				$rf_mes = $rf_mes;

				$meta_percentual_acumulado=( $item['nr_meta'] / $percentual_reclamacao_acumulado )*100;
				$meta_percentual_acumulado=$meta_percentual_acumulado;

				// =SE(M63<1;M63*J63;J63)				RF ACUMULADO
				// M63 = $meta_percentual_acumulado
				// J63 = $item['nr_peso']
				$rf_acumulado=( $meta_percentual_acumulado<100 )?($meta_percentual_acumulado*$item['nr_peso'])/100:$item['nr_peso'];
				$rf_acumulado=$rf_acumulado;

				// % MÉDIA MÓVEL, média dos últimos 12 meses do "% RECL"
				$a_percentual_reclamacao[]=$percentual_reclamacao;
				$percentual_media_movel=0;

				// % MÉDIA MÓVEL, média dos últimos 12 meses do "RF MES"	
				$a_rf_mes[]=$rf_mes;
				$media_movel=0;

				$j=1;
				for( $i=sizeof($a_percentual_reclamacao);$i>0;$i-- )
				{
					if( $j<=$acumular_ate )
					{
						$percentual_media_movel += $a_percentual_reclamacao[$i-1];
						$media_movel += $a_rf_mes[$i-1];

						$j++;
					}
				}

				$divisor=(sizeof($a_percentual_reclamacao)<$acumular_ate)?sizeof($a_percentual_reclamacao):$acumular_ate;
				$percentual_media_movel=floatval($percentual_media_movel)/$divisor;
				$media_movel=floatval($media_movel)/$divisor;

				$row['mes_ano'] = $item['mes_referencia'];
				$row['total_part'] = floatval($item["nr_atendimento"]);
				$row['total_recl'] = floatval($item["nr_reclamacao"]);
				$row['recl_mes'] = floatval($percentual_reclamacao);
				$row['recl_acu'] = floatval($percentual_reclamacao_acumulado);
				$row['recl_meta'] = floatval($item["nr_meta"]);
				$row['recl_media'] = floatval( $percentual_media_movel );

				$row['igp_mes'] = $rf_mes;
				$row['igp_acum'] = $rf_acumulado;
				$row['igp_media'] = $media_movel;

				$indicador[] = $row;

				// coleta de dados para histórico dos anos anteriores
				if( strpos($item['mes_referencia'],"12/")>-1 )
				{
					$hst_meta = $item['nr_meta'];
					$hst_resultado = $percentual_reclamacao_acumulado;
					$mr = explode( '/', $item['mes_referencia'] );
					$desvio_meta = floatval($hst_meta)-floatval($hst_resultado);

					igp_gravar_historico( intval($mr[1]), floatval($hst_meta), floatval($hst_resultado), floatval($desvio_meta), enum_indicador::RECLAMACAO );
				}
			}

			$INDICADOR_TABELA_CODIGO = enum_indicador_tabela_restrito::GRAFICO_IGP_RECLAMACAO;
			$sql = " DELETE FROM indicador.indicador_parametro WHERE cd_indicador_tabela=? ";
			$this->db->query( $sql, array(intval($INDICADOR_TABELA_CODIGO)) );

			$sql='';

			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 0,0, utf8_encode('Mês'), 'background,center');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 1,0, utf8_encode('Participantes'), 'background,center');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 2,0, utf8_encode('Reclamações'), 'background,center');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 3,0, utf8_encode('No mês'), 'background,center');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 4,0, utf8_encode('Acumulado'), 'background,center');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 5,0, utf8_encode('Meta'), 'background,center');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 6,0, utf8_encode('Média'), 'background,center');

			$linha=1;
			$contador_media=0;
			$contador_media_ano=0;
			$media=0;
			$media_ano=0;
			for( $i=sizeof($indicador)-$acumular_ate;$i<sizeof($indicador);$i++ )
			{
				// IGP
				$sql1 = " SELECT * FROM igp.igp WHERE to_char( dt_referencia, 'MM/YYYY' )='".$indicador[$i]['mes_ano']."'; ";
				$query = $this->db->query( $sql1 );

				$igp = $query->row_array();

				if(sizeof($igp)>0)
				{
					$sql .= "update igp.igp set acu_recl=".floatval($indicador[$i]['igp_acum']).", mes_recl=".floatval($indicador[$i]['igp_mes']).", mm_recl=".floatval($indicador[$i]['igp_media'])." where cd_igp=".intval($igp['cd_igp'])."; ";
				}
				else
				{
					$sql .= "insert into igp.igp (acu_recl, mes_recl, mm_recl, dt_referencia) values (".floatval($indicador[$i]['igp_acum']).",".floatval($indicador[$i]['igp_mes']).",".floatval($indicador[$i]['igp_media']).", to_date( '01/".$indicador[$i]['mes_ano']."', 'DD/MM/YYYY' )); ";
				}

				$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 0, $linha, $indicador[$i]['mes_ano'], 'background,center');
				$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 1, $linha, $indicador[$i]['total_part'], 'right');
				$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 2, $linha, $indicador[$i]['total_recl'], 'right');
				$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 3, $linha, number_format( $indicador[$i]['recl_mes'], 2, ',', '' ), 'right');
				$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 4, $linha, number_format( $indicador[$i]['recl_acu'], 2, ',', '' ), 'right');
				$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 5, $linha, number_format( $indicador[$i]['recl_meta'], 2, ',', '' ), 'right');
				$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 6, $linha, number_format( $indicador[$i]['recl_media'], 2, ',', '' ), 'right');

				$media += floatval(app_decimal_para_db($indicador[$i]['recl_mes']));
				$contador_media++;
				
				if( strpos($indicador[$i]['mes_ano'],"/".date('Y'))>-1 )
				{
					$media_ano += floatval(app_decimal_para_db($indicador[$i]['recl_mes']));
					$contador_media_ano++;
				}

				$linha++;
			}

			$media = floatval($media) / $contador_media;
			$media_ano = floatval($media_ano) / $contador_media_ano;

			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 0, $linha, '', 'background,center');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 1, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 2, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 3, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 4, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 5, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 6, $linha, '', '');
			$linha++;
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 0, $linha, 'Media', 'background,center');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 1, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 2, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 3, $linha, number_format($media,2,',','.'), 'right');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 4, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 5, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 6, $linha, '', '');
			$linha++;
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 0, $linha, 'Media '.date('Y'), 'background,center');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 1, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 2, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 3, $linha, number_format($media_ano,2,',','.'), 'right');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 4, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 5, $linha, '', '');
			$sql.=indicador_db::sql_inserir_celula( $INDICADOR_TABELA_CODIGO, 6, $linha, '', '');

			$this->db->query($sql);

			// resgatar codigo do indicador
			$sql = "SELECT cd_indicador FROM indicador.indicador_tabela where cd_indicador_tabela=?";
			$query = $this->db->query($sql, array(intval($INDICADOR_TABELA_CODIGO)));
			$res = $query->row_array();

			echo 'Indicador atualizado com sucesso!'.br();
			echo 'IGP atualizado com sucesso!'.br(2);
			echo anchor( 'indicador/apresentacao/detalhe/'.$res['cd_indicador'], 'Ver apresentação' );
		}
	}
}
?>